{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAmBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAM,C,SAAEF,E,MAAUC,GACfE,EAAgBC,KAAKC,SAAW,GACzC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACPN,EACFI,EAAQL,GAERM,EAAON,EAAI,GAEXD,EAAM,G,CA1BZL,EAAQc,iBAAiB,UAEzB,SAAwBC,GACtBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOlB,EAAQK,MAAMc,OAEjC,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAQqB,OAAOF,MAAOC,GAAK,EAC9CjB,EAAciB,EAAGH,GAElBK,MAAK,EAAClB,SAACA,EAAQC,MAACA,KAAWP,EAAAyB,OAAOC,QAAQ,uBAAqBpB,QAAiBC,SAAYoB,OAC1F,EAAKrB,WAASC,WAAWP,EAAAyB,OAAMG,QAAC,sBAAStB,QAA8BC,SACzEY,GAASC,OAAOlB,EAAQ2B,kBAAkBR,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form')\n\n\nformRef.addEventListener('submit', onSubmitButton)\n\nfunction onSubmitButton(e) {\n  e.preventDefault();\n  let delay = Number(formRef.delay.value)\n\n  for (let i = 1; i <= formRef.amount.value; i += 1) \n    createPromise(i, delay)\n      \n  .then(({position,delay}) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  .catch(({position,delay})=> Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n   delay += Number(formRef.setPointerCapture.value)\n}\n\n\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay }\n     const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(obj);\n    } else {\n      reject(obj);\n    }\n    },delay)\n  })\n}\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","obj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","Notify","success","catch","failure","setPointerCapture"],"version":3,"file":"03-promises.f98b5c78.js.map"}